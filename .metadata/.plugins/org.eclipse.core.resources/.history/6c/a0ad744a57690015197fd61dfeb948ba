package nk.hiroshi.network;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.ServerSocket;
import java.net.Socket;

public class Server {
	public static void main(String[] args) {
		new Server(3141);
	}

	ServerSocket server;
	Socket client;
	boolean online = true;
	int cno = 0;
	
	public Server(int port) {
		try {
			server = new ServerSocket(port);
		}
		catch(Exception e) {
			System.err.println("Error Making Server");
			System.exit(100);
		}
		
		while(online) {
			try {
				new CConnect(server.accept(), ++cno).start();
			}
			catch(Exception e) {
				
			}
		}
		
	}
	
	public class CConnect extends Thread {
		BufferedReader in;
		PrintWriter out;
		boolean running = true;
		Socket client = null;
		
		public CConnect(Socket client, int clientno) {
			this.client = client;
			
			try {
				in  = new BufferedReader(new InputStreamReader(client.getInputStream()));
				out = new PrintWriter(client.getOutputStream(), true);
				System.out.println(clientno + " has successfully connected");
			} 
			catch (IOException e) {
				e.printStackTrace();
			}
			
		}
		
		public void run() {
			try {
				String s;
				while((s = in.readLine()) != null && running) {
					
					System.out.println(s);
					out.println(s);
					
					if(s.equals("stop")) {
						running = false;
						online = false;
					}
				}
				
				this.client.close();
			}
			catch(Exception e) {
				e.printStackTrace();
				System.out.println("Errorrrorrrorrorr");
			}
		}
	}
}