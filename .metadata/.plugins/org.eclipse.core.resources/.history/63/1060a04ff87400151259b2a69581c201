package sd.swiftserver.rk.net;

import java.io.IOException;
import java.net.ServerSocket;
import java.util.ArrayList;

import sd.swiftglobal.rk.Settings;

public class Server implements Settings {

	protected final int port;
	
	private ServerSocket server = null;
	
	private boolean online = false;
	
	private static ArrayList<Runner> clients = new ArrayList<Runner>();
	
	public Server() {
		this(DEF_PORT);
	}

	public Server(int port) {
		this.port = port;
		
		try {
			server = new ServerSocket(port);
			online = true;
		}
		catch(IOException ix) {
			System.err.println("Failed to initalize server on " + port);
			System.err.println(ix.getMessage());
			online = false;
		}
		
		while(online) {
			try {
				Runner r = new Runner(server.accept(), clients.size() + 1);
				new Thread(r).start();
				clients.add(r);
			}
			catch(IOException ix) {
				System.err.println("Error while accepting connection from client");
				System.err.println(ix.getMessage());
			}
		}
	}
	
	protected static void removeClient(int id) {
		clients.set(id, null);
	}
}
